// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/syseleven/go-metakube/models"
)

// ListMaintenanceCronJobsReader is a Reader for the ListMaintenanceCronJobs structure.
type ListMaintenanceCronJobsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMaintenanceCronJobsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListMaintenanceCronJobsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListMaintenanceCronJobsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListMaintenanceCronJobsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListMaintenanceCronJobsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListMaintenanceCronJobsOK creates a ListMaintenanceCronJobsOK with default headers values
func NewListMaintenanceCronJobsOK() *ListMaintenanceCronJobsOK {
	return &ListMaintenanceCronJobsOK{}
}

/*
ListMaintenanceCronJobsOK describes a response with status code 200, with default header values.

MaintenanceCronJob
*/
type ListMaintenanceCronJobsOK struct {
	Payload []*models.MaintenanceCronJob
}

// IsSuccess returns true when this list maintenance cron jobs o k response has a 2xx status code
func (o *ListMaintenanceCronJobsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list maintenance cron jobs o k response has a 3xx status code
func (o *ListMaintenanceCronJobsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list maintenance cron jobs o k response has a 4xx status code
func (o *ListMaintenanceCronJobsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list maintenance cron jobs o k response has a 5xx status code
func (o *ListMaintenanceCronJobsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list maintenance cron jobs o k response a status code equal to that given
func (o *ListMaintenanceCronJobsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list maintenance cron jobs o k response
func (o *ListMaintenanceCronJobsOK) Code() int {
	return 200
}

func (o *ListMaintenanceCronJobsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs][%d] listMaintenanceCronJobsOK  %+v", 200, o.Payload)
}

func (o *ListMaintenanceCronJobsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs][%d] listMaintenanceCronJobsOK  %+v", 200, o.Payload)
}

func (o *ListMaintenanceCronJobsOK) GetPayload() []*models.MaintenanceCronJob {
	return o.Payload
}

func (o *ListMaintenanceCronJobsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMaintenanceCronJobsUnauthorized creates a ListMaintenanceCronJobsUnauthorized with default headers values
func NewListMaintenanceCronJobsUnauthorized() *ListMaintenanceCronJobsUnauthorized {
	return &ListMaintenanceCronJobsUnauthorized{}
}

/*
ListMaintenanceCronJobsUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListMaintenanceCronJobsUnauthorized struct {
}

// IsSuccess returns true when this list maintenance cron jobs unauthorized response has a 2xx status code
func (o *ListMaintenanceCronJobsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list maintenance cron jobs unauthorized response has a 3xx status code
func (o *ListMaintenanceCronJobsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list maintenance cron jobs unauthorized response has a 4xx status code
func (o *ListMaintenanceCronJobsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list maintenance cron jobs unauthorized response has a 5xx status code
func (o *ListMaintenanceCronJobsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list maintenance cron jobs unauthorized response a status code equal to that given
func (o *ListMaintenanceCronJobsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list maintenance cron jobs unauthorized response
func (o *ListMaintenanceCronJobsUnauthorized) Code() int {
	return 401
}

func (o *ListMaintenanceCronJobsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs][%d] listMaintenanceCronJobsUnauthorized ", 401)
}

func (o *ListMaintenanceCronJobsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs][%d] listMaintenanceCronJobsUnauthorized ", 401)
}

func (o *ListMaintenanceCronJobsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListMaintenanceCronJobsForbidden creates a ListMaintenanceCronJobsForbidden with default headers values
func NewListMaintenanceCronJobsForbidden() *ListMaintenanceCronJobsForbidden {
	return &ListMaintenanceCronJobsForbidden{}
}

/*
ListMaintenanceCronJobsForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListMaintenanceCronJobsForbidden struct {
}

// IsSuccess returns true when this list maintenance cron jobs forbidden response has a 2xx status code
func (o *ListMaintenanceCronJobsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list maintenance cron jobs forbidden response has a 3xx status code
func (o *ListMaintenanceCronJobsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list maintenance cron jobs forbidden response has a 4xx status code
func (o *ListMaintenanceCronJobsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list maintenance cron jobs forbidden response has a 5xx status code
func (o *ListMaintenanceCronJobsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list maintenance cron jobs forbidden response a status code equal to that given
func (o *ListMaintenanceCronJobsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list maintenance cron jobs forbidden response
func (o *ListMaintenanceCronJobsForbidden) Code() int {
	return 403
}

func (o *ListMaintenanceCronJobsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs][%d] listMaintenanceCronJobsForbidden ", 403)
}

func (o *ListMaintenanceCronJobsForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs][%d] listMaintenanceCronJobsForbidden ", 403)
}

func (o *ListMaintenanceCronJobsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListMaintenanceCronJobsDefault creates a ListMaintenanceCronJobsDefault with default headers values
func NewListMaintenanceCronJobsDefault(code int) *ListMaintenanceCronJobsDefault {
	return &ListMaintenanceCronJobsDefault{
		_statusCode: code,
	}
}

/*
ListMaintenanceCronJobsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListMaintenanceCronJobsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this list maintenance cron jobs default response has a 2xx status code
func (o *ListMaintenanceCronJobsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list maintenance cron jobs default response has a 3xx status code
func (o *ListMaintenanceCronJobsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list maintenance cron jobs default response has a 4xx status code
func (o *ListMaintenanceCronJobsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list maintenance cron jobs default response has a 5xx status code
func (o *ListMaintenanceCronJobsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list maintenance cron jobs default response a status code equal to that given
func (o *ListMaintenanceCronJobsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list maintenance cron jobs default response
func (o *ListMaintenanceCronJobsDefault) Code() int {
	return o._statusCode
}

func (o *ListMaintenanceCronJobsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs][%d] listMaintenanceCronJobs default  %+v", o._statusCode, o.Payload)
}

func (o *ListMaintenanceCronJobsDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs][%d] listMaintenanceCronJobs default  %+v", o._statusCode, o.Payload)
}

func (o *ListMaintenanceCronJobsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListMaintenanceCronJobsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
