// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/syseleven/go-metakube/models"
)

// PatchNodeDeploymentRequestReader is a Reader for the PatchNodeDeploymentRequest structure.
type PatchNodeDeploymentRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchNodeDeploymentRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchNodeDeploymentRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchNodeDeploymentRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchNodeDeploymentRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPatchNodeDeploymentRequestDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchNodeDeploymentRequestOK creates a PatchNodeDeploymentRequestOK with default headers values
func NewPatchNodeDeploymentRequestOK() *PatchNodeDeploymentRequestOK {
	return &PatchNodeDeploymentRequestOK{}
}

/*PatchNodeDeploymentRequestOK handles this case with default header values.

NodeDeploymentRequest
*/
type PatchNodeDeploymentRequestOK struct {
	Payload *models.NodeDeploymentRequest
}

func (o *PatchNodeDeploymentRequestOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/ndrequests/{ndrequest_id}][%d] patchNodeDeploymentRequestOK  %+v", 200, o.Payload)
}

func (o *PatchNodeDeploymentRequestOK) GetPayload() *models.NodeDeploymentRequest {
	return o.Payload
}

func (o *PatchNodeDeploymentRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodeDeploymentRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNodeDeploymentRequestUnauthorized creates a PatchNodeDeploymentRequestUnauthorized with default headers values
func NewPatchNodeDeploymentRequestUnauthorized() *PatchNodeDeploymentRequestUnauthorized {
	return &PatchNodeDeploymentRequestUnauthorized{}
}

/*PatchNodeDeploymentRequestUnauthorized handles this case with default header values.

EmptyResponse is a empty response
*/
type PatchNodeDeploymentRequestUnauthorized struct {
}

func (o *PatchNodeDeploymentRequestUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/ndrequests/{ndrequest_id}][%d] patchNodeDeploymentRequestUnauthorized ", 401)
}

func (o *PatchNodeDeploymentRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchNodeDeploymentRequestForbidden creates a PatchNodeDeploymentRequestForbidden with default headers values
func NewPatchNodeDeploymentRequestForbidden() *PatchNodeDeploymentRequestForbidden {
	return &PatchNodeDeploymentRequestForbidden{}
}

/*PatchNodeDeploymentRequestForbidden handles this case with default header values.

EmptyResponse is a empty response
*/
type PatchNodeDeploymentRequestForbidden struct {
}

func (o *PatchNodeDeploymentRequestForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/ndrequests/{ndrequest_id}][%d] patchNodeDeploymentRequestForbidden ", 403)
}

func (o *PatchNodeDeploymentRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchNodeDeploymentRequestDefault creates a PatchNodeDeploymentRequestDefault with default headers values
func NewPatchNodeDeploymentRequestDefault(code int) *PatchNodeDeploymentRequestDefault {
	return &PatchNodeDeploymentRequestDefault{
		_statusCode: code,
	}
}

/*PatchNodeDeploymentRequestDefault handles this case with default header values.

errorResponse
*/
type PatchNodeDeploymentRequestDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the patch node deployment request default response
func (o *PatchNodeDeploymentRequestDefault) Code() int {
	return o._statusCode
}

func (o *PatchNodeDeploymentRequestDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/projects/{project_id}/dc/{dc}/clusters/{cluster_id}/ndrequests/{ndrequest_id}][%d] patchNodeDeploymentRequest default  %+v", o._statusCode, o.Payload)
}

func (o *PatchNodeDeploymentRequestDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchNodeDeploymentRequestDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
