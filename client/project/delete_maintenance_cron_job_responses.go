// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/syseleven/go-metakube/models"
)

// DeleteMaintenanceCronJobReader is a Reader for the DeleteMaintenanceCronJob structure.
type DeleteMaintenanceCronJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMaintenanceCronJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteMaintenanceCronJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteMaintenanceCronJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteMaintenanceCronJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteMaintenanceCronJobDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteMaintenanceCronJobOK creates a DeleteMaintenanceCronJobOK with default headers values
func NewDeleteMaintenanceCronJobOK() *DeleteMaintenanceCronJobOK {
	return &DeleteMaintenanceCronJobOK{}
}

/*
DeleteMaintenanceCronJobOK describes a response with status code 200, with default header values.

EmptyResponse is a empty response
*/
type DeleteMaintenanceCronJobOK struct {
}

// IsSuccess returns true when this delete maintenance cron job o k response has a 2xx status code
func (o *DeleteMaintenanceCronJobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete maintenance cron job o k response has a 3xx status code
func (o *DeleteMaintenanceCronJobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete maintenance cron job o k response has a 4xx status code
func (o *DeleteMaintenanceCronJobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete maintenance cron job o k response has a 5xx status code
func (o *DeleteMaintenanceCronJobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete maintenance cron job o k response a status code equal to that given
func (o *DeleteMaintenanceCronJobOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete maintenance cron job o k response
func (o *DeleteMaintenanceCronJobOK) Code() int {
	return 200
}

func (o *DeleteMaintenanceCronJobOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] deleteMaintenanceCronJobOK ", 200)
}

func (o *DeleteMaintenanceCronJobOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] deleteMaintenanceCronJobOK ", 200)
}

func (o *DeleteMaintenanceCronJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMaintenanceCronJobUnauthorized creates a DeleteMaintenanceCronJobUnauthorized with default headers values
func NewDeleteMaintenanceCronJobUnauthorized() *DeleteMaintenanceCronJobUnauthorized {
	return &DeleteMaintenanceCronJobUnauthorized{}
}

/*
DeleteMaintenanceCronJobUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type DeleteMaintenanceCronJobUnauthorized struct {
}

// IsSuccess returns true when this delete maintenance cron job unauthorized response has a 2xx status code
func (o *DeleteMaintenanceCronJobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete maintenance cron job unauthorized response has a 3xx status code
func (o *DeleteMaintenanceCronJobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete maintenance cron job unauthorized response has a 4xx status code
func (o *DeleteMaintenanceCronJobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete maintenance cron job unauthorized response has a 5xx status code
func (o *DeleteMaintenanceCronJobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete maintenance cron job unauthorized response a status code equal to that given
func (o *DeleteMaintenanceCronJobUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete maintenance cron job unauthorized response
func (o *DeleteMaintenanceCronJobUnauthorized) Code() int {
	return 401
}

func (o *DeleteMaintenanceCronJobUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] deleteMaintenanceCronJobUnauthorized ", 401)
}

func (o *DeleteMaintenanceCronJobUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] deleteMaintenanceCronJobUnauthorized ", 401)
}

func (o *DeleteMaintenanceCronJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMaintenanceCronJobForbidden creates a DeleteMaintenanceCronJobForbidden with default headers values
func NewDeleteMaintenanceCronJobForbidden() *DeleteMaintenanceCronJobForbidden {
	return &DeleteMaintenanceCronJobForbidden{}
}

/*
DeleteMaintenanceCronJobForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type DeleteMaintenanceCronJobForbidden struct {
}

// IsSuccess returns true when this delete maintenance cron job forbidden response has a 2xx status code
func (o *DeleteMaintenanceCronJobForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete maintenance cron job forbidden response has a 3xx status code
func (o *DeleteMaintenanceCronJobForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete maintenance cron job forbidden response has a 4xx status code
func (o *DeleteMaintenanceCronJobForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete maintenance cron job forbidden response has a 5xx status code
func (o *DeleteMaintenanceCronJobForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete maintenance cron job forbidden response a status code equal to that given
func (o *DeleteMaintenanceCronJobForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete maintenance cron job forbidden response
func (o *DeleteMaintenanceCronJobForbidden) Code() int {
	return 403
}

func (o *DeleteMaintenanceCronJobForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] deleteMaintenanceCronJobForbidden ", 403)
}

func (o *DeleteMaintenanceCronJobForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] deleteMaintenanceCronJobForbidden ", 403)
}

func (o *DeleteMaintenanceCronJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMaintenanceCronJobDefault creates a DeleteMaintenanceCronJobDefault with default headers values
func NewDeleteMaintenanceCronJobDefault(code int) *DeleteMaintenanceCronJobDefault {
	return &DeleteMaintenanceCronJobDefault{
		_statusCode: code,
	}
}

/*
DeleteMaintenanceCronJobDefault describes a response with status code -1, with default header values.

errorResponse
*/
type DeleteMaintenanceCronJobDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete maintenance cron job default response has a 2xx status code
func (o *DeleteMaintenanceCronJobDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete maintenance cron job default response has a 3xx status code
func (o *DeleteMaintenanceCronJobDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete maintenance cron job default response has a 4xx status code
func (o *DeleteMaintenanceCronJobDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete maintenance cron job default response has a 5xx status code
func (o *DeleteMaintenanceCronJobDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete maintenance cron job default response a status code equal to that given
func (o *DeleteMaintenanceCronJobDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete maintenance cron job default response
func (o *DeleteMaintenanceCronJobDefault) Code() int {
	return o._statusCode
}

func (o *DeleteMaintenanceCronJobDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] deleteMaintenanceCronJob default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteMaintenanceCronJobDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] deleteMaintenanceCronJob default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteMaintenanceCronJobDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteMaintenanceCronJobDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
