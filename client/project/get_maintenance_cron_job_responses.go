// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/syseleven/go-metakube/models"
)

// GetMaintenanceCronJobReader is a Reader for the GetMaintenanceCronJob structure.
type GetMaintenanceCronJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMaintenanceCronJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMaintenanceCronJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMaintenanceCronJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMaintenanceCronJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetMaintenanceCronJobDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMaintenanceCronJobOK creates a GetMaintenanceCronJobOK with default headers values
func NewGetMaintenanceCronJobOK() *GetMaintenanceCronJobOK {
	return &GetMaintenanceCronJobOK{}
}

/*
GetMaintenanceCronJobOK describes a response with status code 200, with default header values.

MaintenanceCronJob
*/
type GetMaintenanceCronJobOK struct {
	Payload *models.MaintenanceCronJob
}

// IsSuccess returns true when this get maintenance cron job o k response has a 2xx status code
func (o *GetMaintenanceCronJobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get maintenance cron job o k response has a 3xx status code
func (o *GetMaintenanceCronJobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get maintenance cron job o k response has a 4xx status code
func (o *GetMaintenanceCronJobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get maintenance cron job o k response has a 5xx status code
func (o *GetMaintenanceCronJobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get maintenance cron job o k response a status code equal to that given
func (o *GetMaintenanceCronJobOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get maintenance cron job o k response
func (o *GetMaintenanceCronJobOK) Code() int {
	return 200
}

func (o *GetMaintenanceCronJobOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] getMaintenanceCronJobOK  %+v", 200, o.Payload)
}

func (o *GetMaintenanceCronJobOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] getMaintenanceCronJobOK  %+v", 200, o.Payload)
}

func (o *GetMaintenanceCronJobOK) GetPayload() *models.MaintenanceCronJob {
	return o.Payload
}

func (o *GetMaintenanceCronJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaintenanceCronJob)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMaintenanceCronJobUnauthorized creates a GetMaintenanceCronJobUnauthorized with default headers values
func NewGetMaintenanceCronJobUnauthorized() *GetMaintenanceCronJobUnauthorized {
	return &GetMaintenanceCronJobUnauthorized{}
}

/*
GetMaintenanceCronJobUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type GetMaintenanceCronJobUnauthorized struct {
}

// IsSuccess returns true when this get maintenance cron job unauthorized response has a 2xx status code
func (o *GetMaintenanceCronJobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get maintenance cron job unauthorized response has a 3xx status code
func (o *GetMaintenanceCronJobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get maintenance cron job unauthorized response has a 4xx status code
func (o *GetMaintenanceCronJobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get maintenance cron job unauthorized response has a 5xx status code
func (o *GetMaintenanceCronJobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get maintenance cron job unauthorized response a status code equal to that given
func (o *GetMaintenanceCronJobUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get maintenance cron job unauthorized response
func (o *GetMaintenanceCronJobUnauthorized) Code() int {
	return 401
}

func (o *GetMaintenanceCronJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] getMaintenanceCronJobUnauthorized ", 401)
}

func (o *GetMaintenanceCronJobUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] getMaintenanceCronJobUnauthorized ", 401)
}

func (o *GetMaintenanceCronJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaintenanceCronJobForbidden creates a GetMaintenanceCronJobForbidden with default headers values
func NewGetMaintenanceCronJobForbidden() *GetMaintenanceCronJobForbidden {
	return &GetMaintenanceCronJobForbidden{}
}

/*
GetMaintenanceCronJobForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type GetMaintenanceCronJobForbidden struct {
}

// IsSuccess returns true when this get maintenance cron job forbidden response has a 2xx status code
func (o *GetMaintenanceCronJobForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get maintenance cron job forbidden response has a 3xx status code
func (o *GetMaintenanceCronJobForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get maintenance cron job forbidden response has a 4xx status code
func (o *GetMaintenanceCronJobForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get maintenance cron job forbidden response has a 5xx status code
func (o *GetMaintenanceCronJobForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get maintenance cron job forbidden response a status code equal to that given
func (o *GetMaintenanceCronJobForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get maintenance cron job forbidden response
func (o *GetMaintenanceCronJobForbidden) Code() int {
	return 403
}

func (o *GetMaintenanceCronJobForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] getMaintenanceCronJobForbidden ", 403)
}

func (o *GetMaintenanceCronJobForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] getMaintenanceCronJobForbidden ", 403)
}

func (o *GetMaintenanceCronJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaintenanceCronJobDefault creates a GetMaintenanceCronJobDefault with default headers values
func NewGetMaintenanceCronJobDefault(code int) *GetMaintenanceCronJobDefault {
	return &GetMaintenanceCronJobDefault{
		_statusCode: code,
	}
}

/*
GetMaintenanceCronJobDefault describes a response with status code -1, with default header values.

errorResponse
*/
type GetMaintenanceCronJobDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get maintenance cron job default response has a 2xx status code
func (o *GetMaintenanceCronJobDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get maintenance cron job default response has a 3xx status code
func (o *GetMaintenanceCronJobDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get maintenance cron job default response has a 4xx status code
func (o *GetMaintenanceCronJobDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get maintenance cron job default response has a 5xx status code
func (o *GetMaintenanceCronJobDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get maintenance cron job default response a status code equal to that given
func (o *GetMaintenanceCronJobDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get maintenance cron job default response
func (o *GetMaintenanceCronJobDefault) Code() int {
	return o._statusCode
}

func (o *GetMaintenanceCronJobDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] getMaintenanceCronJob default  %+v", o._statusCode, o.Payload)
}

func (o *GetMaintenanceCronJobDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/maintenancecronjobs/{maintenancecronjob_id}][%d] getMaintenanceCronJob default  %+v", o._statusCode, o.Payload)
}

func (o *GetMaintenanceCronJobDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetMaintenanceCronJobDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
