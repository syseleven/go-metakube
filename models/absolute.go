// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Absolute Usage is a struct that contains the current resource usage and limits
// of a tenant.
//
// swagger:model Absolute
type Absolute struct {

	// MaxImageMeta is the amount of image metadata available to a tenant.
	MaxImageMeta int64 `json:"maxImageMeta,omitempty"`

	// MaxPersonality is the amount of personality/files available to a tenant.
	MaxPersonality int64 `json:"maxPersonality,omitempty"`

	// MaxPersonalitySize is the personality file size available to a tenant.
	MaxPersonalitySize int64 `json:"maxPersonalitySize,omitempty"`

	// MaxSecurityGroupRules is the number of security group rules available to
	// a tenant.
	MaxSecurityGroupRules int64 `json:"maxSecurityGroupRules,omitempty"`

	// MaxSecurityGroups is the number of security groups available to a tenant.
	MaxSecurityGroups int64 `json:"maxSecurityGroups,omitempty"`

	// MaxServerGroupMembers is the number of server group members available
	// to a tenant.
	MaxServerGroupMembers int64 `json:"maxServerGroupMembers,omitempty"`

	// MaxServerGroups is the number of server groups available to a tenant.
	MaxServerGroups int64 `json:"maxServerGroups,omitempty"`

	// MaxServerMeta is the amount of server metadata available to a tenant.
	MaxServerMeta int64 `json:"maxServerMeta,omitempty"`

	// MaxTotalCores is the number of cores available to a tenant.
	MaxTotalCores int64 `json:"maxTotalCores,omitempty"`

	// MaxTotalFloatingIps is the number of floating IPs available to a tenant.
	MaxTotalFloatingIps int64 `json:"maxTotalFloatingIps,omitempty"`

	// MaxTotalInstances is the number of instances/servers available to a tenant.
	MaxTotalInstances int64 `json:"maxTotalInstances,omitempty"`

	// MaxTotalKeypairs is the total keypairs available to a tenant.
	MaxTotalKeypairs int64 `json:"maxTotalKeypairs,omitempty"`

	// MaxTotalRAMSize is the total amount of RAM available to a tenant measured
	// in megabytes (MB).
	MaxTotalRAMSize int64 `json:"maxTotalRAMSize,omitempty"`

	// TotalCoresUsed is the number of cores currently in use.
	TotalCoresUsed int64 `json:"totalCoresUsed,omitempty"`

	// TotalFloatingIpsUsed is the number of floating IPs in use.
	TotalFloatingIpsUsed int64 `json:"totalFloatingIpsUsed,omitempty"`

	// TotalInstancesUsed is the number of instances/servers in use.
	TotalInstancesUsed int64 `json:"totalInstancesUsed,omitempty"`

	// TotalRAMUsed is the total RAM/memory in use measured in megabytes (MB).
	TotalRAMUsed int64 `json:"totalRAMUsed,omitempty"`

	// TotalSecurityGroupsUsed is the total number of security groups in use.
	TotalSecurityGroupsUsed int64 `json:"totalSecurityGroupsUsed,omitempty"`

	// TotalServerGroupsUsed is the total number of server groups in use.
	TotalServerGroupsUsed int64 `json:"totalServerGroupsUsed,omitempty"`
}

// Validate validates this absolute
func (m *Absolute) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this absolute based on context it is used
func (m *Absolute) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Absolute) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Absolute) UnmarshalBinary(b []byte) error {
	var res Absolute
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
